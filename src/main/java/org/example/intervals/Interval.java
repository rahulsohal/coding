package org.example.intervals;import org.example.Pair;import java.util.ArrayList;import java.util.Arrays;import java.util.Comparator;import java.util.List;public class Interval {    public static void main(String[] args) {        String[][] shifts1 = {                {"08:00", "10:00"},                {"10:00", "12:00"},                {"14:00", "19:00"},                {"08:00", "09:00"},                {"11:00", "12:00"}        };        // Example 2        String[][] shifts2 = {                {"09:00", "11:00"},                {"10:30", "12:00"},                {"12:00", "14:00"},                {"15:00", "17:00"}        };        Interval interval = new Interval();        System.out.println("Example 1 Output:");        for (String s : interval.employeeShift(shifts1)) {            System.out.println(s);        }        System.out.println("\nExample 2 Output:");        for (String s : interval.employeeShift(shifts2)) {            System.out.println(s);        }    }    public String[] employeeShift(String[][] shift) {        Shift[] shiftList = new Shift[shift.length];        for (int i = 0; i < shift.length; i++) {            int start = convertTimeToMinutes(shift[i][0]);            int end = convertTimeToMinutes(shift[i][1]);            shiftList[i] = (new Shift(start, end));        }        return mergeShift(shiftList);    }    private String[] mergeShift(Shift[] shifts) {        Arrays.sort(shifts, Comparator.comparingInt(Shift::getStart)                .thenComparingInt(Shift::getEnd));        System.out.println(Arrays.toString(shifts));        List<Shift> result = new ArrayList<>();        Shift current = shifts[0];        for(int i=1;i< shifts.length;i++) {            Shift next = shifts[i];            if(next.start <= current.end) {                current.end = Math.max(current.end, next.end);            } else {                result.add(current);                current = next;            }        }        result.add(current);        List<String> output = new ArrayList<>();        for (Shift s : result) {            output.add(formatMinutes(s.start) + " " + formatMinutes(s.end));        }        return output.toArray(new String[0]);    }    private int convertTimeToMinutes(String time) {        int hours = Integer.parseInt(time.substring(0, 2));        int minutes = Integer.parseInt(time.substring(3, 5));        return hours * 60 + minutes;    }    private String formatMinutes(int totalMinutes) {        int hours = totalMinutes / 60;        int minutes = totalMinutes % 60;        return String.format("%02d:%02d", hours, minutes);    }}class Shift {    int start;    int end;    public Shift(int start, int end) {        this.start = start;        this.end = end;    }    public int getStart() {        return start;    }    public int getEnd() {        return end;    }    @Override    public String toString() {        return "Shift{" +                "start=" + start +                ", end=" + end +                '}';    }}