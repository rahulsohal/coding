package org.example.string;import java.util.HashMap;public class LongestSubstringWORepeatingChar {    public static void main(String[] args) {        LongestSubstringWORepeatingChar obj = new LongestSubstringWORepeatingChar();        String s = "abcdefabbcjklmnopkmn";        String res = obj.longestSubstring(s);        System.out.println("Result: "+res);    }    public String longestSubstring(String s) {        char[] arr = s.toCharArray();        HashMap<Character, Integer> hm = new HashMap<>();        int max = 0;        int[] three = new int[3];        int start=0, end=0;        while(end < s.length()) {            if(!hm.containsKey(arr[end])) {                hm.put(arr[end], 1);                if(max < end-start+1) {                    max = Math.max(max, end - start + 1);                    three = new int[] {max, start, end+1};                }                end++;            } else {                hm.clear();                start = end;            }        }        return s.substring(three[1],three[2]);    }}