package org.example.greedy;import java.util.ArrayList;import java.util.Arrays;import java.util.LinkedList;import java.util.List;public class JumpGame {    public static void main(String[] args) {        JumpGame jumpGame = new JumpGame();//        jumpGame.calculate();//        jumpGame.candy();//        System.out.println("Lemonade :" + jumpGame.lemonade());        jumpGame.partitionlabel();    }    public void calculate() {        int[] nums = {1,1,1,1};        int i=0;        int currentEnd=0, farthest=0;        int jump=0;        while(i< nums.length && currentEnd < nums.length-1) {            farthest = Math.max(farthest, i + nums[i]);            if(i == currentEnd) {                jump++;                currentEnd = farthest;            }            i++;        }        System.out.println(jump);;    }    public void candy() {        int nums[] = {1,2,2,1,3,4,3,2,1};        int[] candies = new int[nums.length];        Arrays.fill(candies, 1);        // left to right run, check if rating of neighbour is higher give additional candy        for(int i = 1; i< nums.length;i++) {            if(nums[i] > nums[i-1]) {                candies[i] = candies[i-1] + 1;            }        }        // right ot left run        for(int i = nums.length-2; i>=0;i--) {            if(nums[i] > nums[i+1]) {                candies[i] = Math.max(candies[i], candies[i+1] + 1);            }        }        System.out.println(STR."\{Arrays.stream(candies).sum()}");    }    public boolean lemonade() {        int[] bills = {5,5,5,10,20};        int five=0, ten=0;        int total = 0;        for(int i =0;i<bills.length;i++) {            if(bills[i] == 5) {                five++;                total += bills[i];            }            else if(bills[i] == 10) {                ten++;                if(five > 0) {                    five--;                    total += bills[i];                } else return false;            } else if(bills[i] == 20) {                if(ten > 0 && five > 0) {                    ten--;                    five--;                    total += bills[i];                } else if(five >= 3) {                    five = five-3;                    total += bills[i];                } else return false;            }        }        System.out.println("total: "+total);        return true;    }    public void partitionlabel() {        String s = "ababcbacadefegdehijhklij";        char[] sArr = s.toCharArray();        int[] cache = new int[128];        for(int i=0;i<sArr.length;i++) {            cache[sArr[i]] = i;        }//        System.out.println(Arrays.toString(cache));        int L=0, R=0, index=0;        List<Integer> result = new LinkedList<>();        while (index < sArr.length) {            char curr = sArr[index];            R = Math.max(R, cache[curr]);            if(R == index) {                int size = R - L +1;                result.add(size);                R++;                L=R;            } index++;        }        System.out.println(Arrays.toString(result.toArray()));    }}